---
apiVersion: v1
kind: Namespace
metadata:
  name: ns-ifconfig
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ns-ifconfig
  name: deployment-ifconfig-io
  labels:
    app: ifconfig-io
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ifconfig-io
  template:
    metadata:
      labels:
        app: ifconfig-io
    spec:
      terminationGracePeriodSeconds: 100
      containers:
      - name: ifconfig-io
        image: docker.io/georgyo/ifconfig.io:latest
        ports:
        - name: http
          containerPort: 8080
        env:
        - name: HOSTNAME
          value: "ifconfig.divecode.in"
---
apiVersion: v1
kind: Service
metadata:
  namespace: ns-ifconfig
  name: svc-ifconfig-io
  labels:
    app: ifconfig-io
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
  selector:
    app: ifconfig-io
---


# via public AGIC
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: ns-ifconfig
  name: ingress-public-ifconfig-io
  labels:
    app: ifconfig-io
  annotations:
    kubernetes.io/ingress.class: azure/application-gateway
    appgw.ingress.kubernetes.io/connection-draining: "true"
    appgw.ingress.kubernetes.io/connection-draining-timeout: "30"
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Exact
        backend:
          service:
            name: svc-ifconfig-io
            port:
              number: 80
# ---
# # via private AGIC
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   namespace: ns-ifconfig
#   name: ingress-private-ifconfig-io
#   labels:
#     app: ifconfig-io
#   annotations:
#     kubernetes.io/ingress.class: azure/application-gateway
#     appgw.ingress.kubernetes.io/connection-draining: "true"
#     appgw.ingress.kubernetes.io/connection-draining-timeout: "30"
#     appgw.ingress.kubernetes.io/use-private-ip: "true"
# spec:
#   rules:
#   - http:
#       paths:
#       - path: /
#         pathType: Exact
#         backend:
#           service:
#             name: svc-ifconfig-io
#             port:
#               number: 80